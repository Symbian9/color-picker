<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- sK1 2 1
00003920 -->
<svg xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.0" width="300" height="300">
<image y="0.0"  x="0.0" xlink:href="data:image/png;base64,
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
"  height="300" width="300" />
<!-- Encapsulated SK2
obj('Document')
set('styles',{'Default Style': [[], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []], 'Default Text Style': [[1, 0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black']], [], ['Sans', 'Regular', 12.0, 0, [], True]]})
set('doc_units','px')
set('metainfo',['', '', '', ''])
set('doc_origin',2)
set('resources',{})
obj('Pages')
set('desktop_bg',(1.0, 1.0, 1.0))
set('page_counter',5)
set('page_format',['Custom', (100.0, 100.0), 0])
set('page_fill',[0, (1.0, 1.0, 1.0)])
obj('Page')
set('name','Page 1')
set('page_format',['Custom', (100.0, 100.0), 0])
set('layer_counter',1)
obj('Layer')
set('style',[[], [0, 0.28346456692913385, ['RGB', [0.19607843137254902, 0.3215686274509804, 0.6352941176470588], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('name','Layer 1')
set('color',[0.19607843137254902, 0.3215686274509804, 0.6352941176470588, 1.0])
set('properties',[1, 1, 1, 1])
obj('Rectangle')
set('style',[[1, 0, ['RGB', [0.6, 0.0, 0.0], 1.0, '#990000']], [], [], []])
set('width',96.0)
set('corners',[0.3754991652103492, 0.3754991652103492, 0.3754991652103492, 0.3754991652103492])
set('stroke_trafo',[])
set('fill_trafo',[])
set('height',96.0)
set('start',[-48.0, -48.0])
set('trafo',[1.0, 0.0, 0.0, 1.0, 0.0, 0.0])
end()
obj('TextBlock')
set('style',[[1, 0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black']], [], ['Sans', 'Regular', 14.0, 0, [], True]])
set('text','I0ZGMDBERA==')
set('markup',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -67.96818510484454, 1.3256206314774643])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, -44.640483776211134, -6.998598118522535])
end()
obj('Ellipse')
set('style',[[1, 0, ['CMYK', [0.0, 0.0, 0.0, 0.0], 1.0, 'White']], [0, 1.0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, ''], [], 1, 0, 10.433, 1, 0, []], [], []])
set('circle_type',1)
set('stroke_trafo',[])
set('fill_trafo',[])
set('initial_trafo',[18.0, 0.0, 0.0, 18.0, -48.0, 30.0])
set('angle1',0.0)
set('angle2',0.0)
set('trafo',[18.0, 0.0, 0.0, 18.0, 21.0, 21.0])
end()
obj('Curve')
set('paths',[[[25.93359375, 28.12017926182192], [[28.98415016686068, 25.026682751574977], [34.93359375, 31.12017926182192]], 0]])
set('style',[[], [0, 3.0, ['RGB', [0.0, 0.6, 0.0], 1.0, '#009900'], [], 2, 0, 10.433, 0, 0, []], [], []])
set('stroke_trafo',[])
set('fill_trafo',[])
set('trafo',[1.0, 0.0, 0.0, 1.0, -0.43359375, 0.9735707381780756])
end()
end()
end()
obj('Page')
set('name','Page 3')
set('page_format',['Custom', (100.0, 100.0), 0])
set('layer_counter',2)
obj('Layer')
set('style',[[], [0, 0.28346456692913385, ['RGB', [0.19607843137254902, 0.3215686274509804, 0.6352941176470588], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('name','Layer 1')
set('color',[0.19607843137254902, 0.3215686274509804, 0.6352941176470588, 1.0])
set('properties',[1, 1, 1, 1])
obj('Rectangle')
set('style',[[1, 0, ['RGB', [1.0, 1.0, 0.0], 1.0, 'Yellow']], [], [], []])
set('width',96.0)
set('corners',[0.3754991652103492, 0.3754991652103492, 0.3754991652103492, 0.3754991652103492])
set('stroke_trafo',[])
set('fill_trafo',[])
set('height',96.0)
set('start',[-48.0, -48.0])
set('trafo',[1.0, 0.0, 0.0, 1.0, 0.0, 0.0])
end()
obj('TextBlock')
set('style',[[1, 0, ['RGB', [0.0, 0.0, 0.0], 1.0, 'Black']], [], ['Sans', 'Regular', 13.0, 1, [], True]])
set('text','I0ZGMDBERA==')
set('markup',[])
set('fill_trafo',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -67.96818510484454, 1.3256206314774643])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, -0.32798377621113417, -6.498598118522535])
end()
obj('Ellipse')
set('style',[[1, 0, ['CMYK', [0.0, 0.0, 0.0, 0.0], 1.0, 'White']], [0, 1.0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('circle_type',1)
set('stroke_trafo',[])
set('fill_trafo',[])
set('initial_trafo',[18.0, 0.0, 0.0, 18.0, -48.0, 30.0])
set('angle1',0.0)
set('angle2',0.0)
set('trafo',[18.0, 0.0, 0.0, 18.0, 25.0, 25.0])
end()
obj('Ellipse')
set('style',[[1, 0, ['RGB', [0.0, 0.6, 0.0], 1.0, '#009900']], [], [], []])
set('circle_type',1)
set('stroke_trafo',[])
set('fill_trafo',[])
set('initial_trafo',[18.0, 0.0, 0.0, 18.0, -48.0, 30.0])
set('angle1',0.0)
set('angle2',0.0)
set('trafo',[10.0, 0.0, 0.0, 10.0, 29.0, 29.0])
end()
obj('Rectangle')
set('style',[[], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []])
set('width',20.1052721669)
set('corners',[0.0, 0.0, 0.0, 0.0])
set('stroke_trafo',[])
set('height',1.98481112171)
set('start',[-50.105272166918745, 48.0])
set('trafo',[0.9947542257625801, 0.0, 0.0, 1.0078740157480315, -0.15737322712259783, -0.37795275590551114])
end()
obj('Rectangle')
set('style',[[], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []])
set('width',15.0110217246)
set('corners',[0.0, 0.0, 0.0, 0.0])
set('stroke_trafo',[])
set('height',3.10985310629)
set('start',[-49.98566243206148, 46.994567750280865])
set('trafo',[0.9994794377928163, 0.0, 0.0, 0.9660804020100503, -0.04164497657469707, 1.5940886070979872])
end()
obj('Rectangle')
set('style',[[], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []])
set('width',10.047217728)
set('corners',[0.0, 0.0, 0.0, 0.0])
set('stroke_trafo',[])
set('height',5.02360886401)
set('start',[-50.04546729949011, 45.080811992564655])
set('trafo',[0.9951891010784985, 0.0, 0.0, 0.9953343701399691, -0.19389545696202531, 0.12830482115084652])
end()
obj('Rectangle')
set('style',[[], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []])
set('width',6.0)
set('corners',[0.0, 0.0, 0.0, 0.0])
set('stroke_trafo',[])
set('height',10.0)
set('start',[-50.0, 41.0])
set('trafo',[0.8333333333333334, 0.0, 0.0, 1.0, -8.333333333333329, -1.0])
end()
obj('Rectangle')
set('style',[[], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []])
set('width',8.0)
set('corners',[0.0, 0.0, 0.0, 0.0])
set('stroke_trafo',[])
set('height',7.0)
set('start',[-50.0, 43.0])
set('trafo',[0.875, 0.0, 0.0, 1.0, -6.25, 0.0])
end()
obj('Rectangle')
set('style',[[], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []])
set('width',2.0)
set('corners',[0.0, 0.0, 0.0, 0.0])
set('stroke_trafo',[])
set('height',20.0)
set('start',[-50.0, 30.0])
set('trafo',[1.0, 0.0, 0.0, 1.0, 0.0, 0.0])
end()
obj('Rectangle')
set('style',[[], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []])
set('width',4.0)
set('corners',[0.0, 0.0, 0.0, 0.0])
set('stroke_trafo',[])
set('height',16.0)
set('start',[-51.0, 35.0])
set('trafo',[0.75, 0.0, 0.0, 0.9375, -11.75, 2.1875])
end()
obj('Rectangle')
set('style',[[], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []])
set('width',12.0)
set('corners',[0.0, 0.0, 0.0, 0.0])
set('stroke_trafo',[])
set('height',4.0)
set('start',[-50.0, 46.0])
set('trafo',[1.0, 0.0, 0.0, 1.0, 0.0, 0.0])
end()
obj('Rectangle')
set('style',[[], [0, 0.28346456692913385, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, 'Black'], [], 1, 0, 10.433, 0, 0, []], [], []])
set('width',4.0)
set('corners',[0.0, 0.0, 0.0, 0.0])
set('stroke_trafo',[])
set('height',12.0)
set('start',[-50.0, 38.0])
set('trafo',[1.0, 0.0, 0.0, 1.0, 0.0, 0.0])
end()
end()
end()
obj('Page')
set('name','Page 5')
set('page_format',['Custom', (100.0, 100.0), 0])
set('layer_counter',2)
obj('Layer')
set('style',[[], [0, 0.28346456692913385, ['RGB', [0.19607843137254902, 0.3215686274509804, 0.6352941176470588], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('name','Layer 1')
set('color',[0.19607843137254902, 0.3215686274509804, 0.6352941176470588, 1.0])
set('properties',[1, 1, 1, 1])
obj('Rectangle')
set('style',[[1, 0, ['RGB', [1.0, 1.0, 0.0], 1.0, 'Yellow']], [], [], []])
set('width',96.0)
set('corners',[0.3754991652103492, 0.3754991652103492, 0.3754991652103492, 0.3754991652103492])
set('stroke_trafo',[])
set('fill_trafo',[])
set('height',96.0)
set('start',[-48.0, -48.0])
set('trafo',[1.0, 0.0, 0.0, 1.0, 0.0, 0.0])
end()
obj('TextBlock')
set('style',[[1, 0, ['RGB', [0.0, 0.0, 0.0], 1.0, 'Black']], [], ['Sans', 'Regular', 10.0, 1, [], True]])
set('text','NDUsNjQsMTIsMTA=')
set('markup',[])
set('fill_trafo',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -67.96818510484454, 1.3256206314774643])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, -0.32798377621113417, -6.498598118522535])
end()
obj('Curve')
set('paths',[[[-48.0, 29.976040069903238], [[[-48.0, 39.92871406258013], [-39.92871406258013, 48.0], [-29.976040069903238, 48.0], 1], [29.976040069903238, 48.0], [[39.92871406258013, 48.0], [48.0, 39.92871406258013], [48.0, 29.976040069903238], 1], [-48.0, 29.976040069903238]], 1]])
set('style',[[1, 0, ['RGB', [0.0, 0.0, 0.0], 1.0, 'Black']], [], [], []])
set('stroke_trafo',[])
set('fill_trafo',[])
set('trafo',[1.0, 0.0, 0.0, 1.0, 0.0, 0.0])
end()
obj('Group')
obj('Ellipse')
set('style',[[1, 0, ['CMYK', [0.0, 0.0, 0.0, 0.0], 1.0, 'White']], [0, 1.0, ['CMYK', [0.0, 0.0, 0.0, 1.0], 1.0, ''], [], 1, 0, 10.433, 1, 0, []], [], []])
set('circle_type',1)
set('stroke_trafo',[])
set('fill_trafo',[])
set('initial_trafo',[18.0, 0.0, 0.0, 18.0, -48.0, 30.0])
set('angle1',0.0)
set('angle2',0.0)
set('trafo',[18.0, 0.0, 0.0, 18.0, 25.0, 25.0])
end()
obj('Ellipse')
set('style',[[1, 0, ['RGB', [0.0, 0.6, 0.0], 1.0, '#009900']], [], [], []])
set('circle_type',1)
set('stroke_trafo',[])
set('fill_trafo',[])
set('initial_trafo',[18.0, 0.0, 0.0, 18.0, -48.0, 30.0])
set('angle1',0.0)
set('angle2',0.0)
set('trafo',[10.0, 0.0, 0.0, 10.0, 29.0, 29.0])
end()
end()
obj('TextBlock')
set('style',[[1, 0, ['RGB', [1.0, 1.0, 1.0], 1.0, 'White']], [], ['Sans', 'Bold', 10.0, 1, [], True]])
set('text','Q01ZSw==')
set('markup',[])
set('fill_trafo',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -67.96818510484454, 1.3256206314774643])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, -0.6951712762111306, 33.98828125])
end()
obj('TextBlock')
set('style',[[1, 0, ['RGB', [0.0, 0.0, 0.0], 1.0, 'Black']], [], ['Sans', 'Regular', 8.0, 1, [], True]])
set('text','Um95YWwgWWVsbG93')
set('markup',[])
set('fill_trafo',[])
set('initial_trafo',[1.0, 0.0, 0.0, 1.0, -67.96818510484454, 1.3256206314774643])
set('width',-1)
set('trafos',{})
set('trafo',[1.0, 0.0, 0.0, 1.0, -1.0779837762111342, -22.998598118522537])
end()
end()
end()
end()
obj('DesktopLayers')
end()
obj('MasterLayers')
end()
obj('GridLayer')
set('style',[[], [0, 0.28346456692913385, ['RGB', [0.0, 0.0, 1.0], 0.15, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('name','GridLayer')
set('color',[0.0, 0.0, 1.0, 0.15])
set('grid',[0.0, 0.0, 1.0, 1.0])
set('properties',[1, 0, 0, 1])
end()
obj('GuideLayer')
set('style',[[], [0, 0.28346456692913385, ['RGB', [0.0, 0.3176470588235294, 1.0], 1.0, ''], [], 1, 0, 10.433, 0, 0, []], [], []])
set('name','GuideLayer')
set('color',[0.0, 0.3176470588235294, 1.0, 1.0])
set('properties',[1, 1, 0, 0])
obj('Guide')
set('orientation',0)
set('position',-48.0)
end()
obj('Guide')
set('orientation',1)
set('position',48.0)
end()
obj('Guide')
set('orientation',0)
set('position',48.0)
end()
obj('Guide')
set('orientation',1)
set('position',-30.0)
end()
obj('Guide')
set('orientation',0)
set('position',-30.0)
end()
obj('Guide')
set('orientation',1)
set('position',30.0)
end()
obj('Guide')
set('orientation',0)
set('position',30.0)
end()
obj('Guide')
set('orientation',1)
set('position',-48.0)
end()
end()
end()
-->
</svg>
